version: '3.8'

services:
  postgres:
    image: postgres:16.2
    environment:
      POSTGRES_DB: myappdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d myappdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
      PGADMIN_LISTEN_PORT: 80
    depends_on:
      - postgres
    ports:
      - "5050:80" # Expose PgAdmin on port 5050 of the host
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - app-network

  fastapi:
    build: .
    volumes:
      - ./:/myapp/
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    environment:
      KAFKA_BROKER: kafka:9092

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - fastapi
    networks:
      - app-network

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - app-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    networks:
      - app-network

  celery-worker:
    build: .
    command: >
      celery -A app.utils.celery worker -E --loglevel=info
    depends_on:
      - fastapi
      - kafka
    environment:
      PYTHONPATH: /myapp
      CELERY_BROKER_URL: kafka://kafka:9092
    networks:
      - app-network

volumes:
  postgres-data:
  pgadmin-data:

networks:
  app-network:
